apiVersion: karpenter.azure.com/v1beta1
kind: AKSNodeClass
metadata:
  name: default
spec:
  # VM instance families/sizes to use
  imageFamily: Ubuntu2204
  #if you want to specify which subnet to use, uncomment the following line and replace with your values
  #vnetSubnetID: "/subscriptions/{YOUR_SUBSCRIPTION_ID}/resourceGroups/{YOUR_RESOURCE_GROUP}/providers/Microsoft.Network/virtualNetworks/{YOUR_VNET}/subnets/{YOUR_SUBNET}"
  
  # Maximum number of pods per node
  # This is the key setting to limit pods per node
  maxPods: 30
    
  # Optional: User data script for additional node customization
  # userData: |
  #   #!/bin/bash
  #   echo "Custom node initialization script"
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
  labels:
      environment: "production"
      nodepool-type: "mixed"
spec:
  # Resource limits constrain the total size of the pool.
  # Limits prevent Karpenter from creating new instances once the limit is exceeded.
  limits:
    cpu: "14"
    memory: 64Gi
    minSize: 1
    maxSize: 10
  # Disruption section which describes the ways in which Karpenter can disrupt and replace Nodes
  # Configuration in this section constrains how aggressive Karpenter can be with performing operations
  # like rolling Nodes due to them hitting their maximum lifetime (expiry) or scaling down nodes to reduce cluster cost
  disruption:
    # Consolidation policy determines when nodes can be removed
    # WhenEmptyOrUnderutilized: Considers all nodes and attempts to remove/replace underutilized nodes to reduce cost
    # WhenEmpty: Only considers nodes with no workload pods for consolidation
    consolidationPolicy: WhenEmptyOrUnderutilized
    
    # Time to wait before acting on consolidation decisions (600s = 10 minutes)
    # Provides a buffer to avoid unnecessary churn from temporary resource changes
    consolidateAfter: 600s
    # The amount of time a Node can live on the cluster before being removed
    # Avoiding long-running Nodes helps to reduce security vulnerabilities as well as to reduce the chance of issues that can plague Nodes with long uptimes such as file fragmentation or memory leaks from system processes
    # You can choose to disable expiration entirely by setting the string value 'Never' here
    # Note: changing this value in the nodepool will drift the nodeclaims.
    #expireAfter: 720h | Never

    # Budgets control the speed and conditions under which Karpenter can scale down nodes
    # Multiple budgets can be defined and the most restrictive will apply
    budgets:
      # Business hours protection: Block all underutilization-based consolidation during weekdays 15:00-24:00 UTC
      # This prevents cost optimization disruptions during peak business hours
      - nodes: "0"                   # Block all consolidation
        reasons:
        - "Underutilized"            # Only apply restriction to underutilized nodes
        schedule: "0 15 * * mon-fri" # Starting at 15:00 UTC on weekdays (cron format)
        duration: 9h                 # Block for 9 hours (15:00-24:00 UTC)
      # Conservative consolidation for empty and drifted nodes
      # Allow removal of only 1 node at a time for safer scaling operations
      - nodes: "1"                   # Allow maximum 1 node to be removed at a time
        reasons:
        - "Empty"                    # Nodes with no running pods
        - "Drifted"                  # Nodes that no longer match the NodePool specification
    # Priority given to the NodePool when the scheduler considers which NodePool
    # to select. Higher weights indicate higher priority when comparing NodePools.
    # Specifying no weight is equivalent to specifying a weight of 0.
    #weight: 10
  template:
    spec:
      nodeClassRef:
        kind: AKSNodeClass
        name: default
      # Add taints and labels to your NodePool to ensure only specific workloads are 
      # scheduled on these nodes. This is especially important if you mix spot and 
      # on-demand nodes.
      #taints:
      #- key: "workload"
      #  value: "batch"
      #  effect: "NoSchedule"
      requirements:
      - key: kubernetes.io/arch
        operator: In
        values:
        - amd64
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
      - key: karpenter.sh/capacity-type
        operator: In
        values:
        - spot
        - on-demand
      - key: karpenter.azure.com/sku-family
        operator: In
        values:
        - D
        - F
        - E
      # Optional: You can specify specific SKU names if needed
      # - key: karpenter.azure.com/sku-name
      #   operator: In
      #   values:
      #   - Standard_D2s_v3
      #   - Standard_F4s_v2
      #   - Standard_E2s_v3
      # Optional: Limit VM resources to control costs
    